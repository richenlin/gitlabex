version: '3.8'

services:
  # GitLab CE
  gitlab:
    image: gitlab/gitlab-ce:17.10.1-ce.0
    hostname: gitlab.local
    container_name: gitlabex-gitlab
    restart: unless-stopped
    expose:
      - "80"
      - "443"
      - "22"
    depends_on:
      - postgres
      - redis
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab'
        gitlab_rails['gitlab_shell_ssh_port'] = 2222
        gitlab_rails['initial_root_password'] = 'b75hZ0qcwLKD'
        gitlab_rails['gitlab_signup_enabled'] = true
        nginx['listen_port'] = 80
        
        # 禁用内置PostgreSQL
        postgresql['enable'] = false
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_encoding'] = 'utf8'
        gitlab_rails['db_host'] = 'postgres'
        gitlab_rails['db_port'] = 5432
        gitlab_rails['db_username'] = 'gitlabex'
        gitlab_rails['db_password'] = 'password123'
        gitlab_rails['db_database'] = 'gitlab'
        
        # 禁用内置Redis
        redis['enable'] = false
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_port'] = 6379
        gitlab_rails['redis_password'] = 'password123'
    networks:
      - gitlabex-network

  # PostgreSQL数据库
  postgres:
    image: postgres:15
    container_name: gitlabex-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: gitlabex
      POSTGRES_USER: gitlabex
      POSTGRES_PASSWORD: password123
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_MULTIPLE_DATABASES: gitlabex,gitlab
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/init-multiple-postgresql-databases.sh
    expose:
      - "5432"
    networks:
      - gitlabex-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: gitlabex-redis
    restart: unless-stopped
    command: redis-server --requirepass password123
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    networks:
      - gitlabex-network

  # OnlyOffice Document Server
  onlyoffice:
    image: onlyoffice/documentserver:latest
    container_name: gitlabex-onlyoffice
    restart: unless-stopped
    stdin_open: true
    tty: true
    expose:
      - "80"
      - "443"
    volumes:
      - onlyoffice_data:/var/www/onlyoffice/Data
      - onlyoffice_logs:/var/log/onlyoffice
      - onlyoffice_cache:/var/lib/onlyoffice/documentserver/App_Data/cache/files
      - onlyoffice_forgotten:/var/lib/onlyoffice/documentserver/App_Data/cache/forgotten
    environment:
      - JWT_ENABLED=true
      - JWT_SECRET=gitlabex-jwt-secret-2024
      - JWT_HEADER=Authorization
      - JWT_IN_BODY=true
      - WOPI_ENABLED=false
      - USE_UNAUTHORIZED_STORAGE=false
    networks:
      - gitlabex-network

  # GitLab OAuth应用自动初始化服务
  gitlab-init:
    image: alpine:latest
    container_name: gitlabex-gitlab-init
    restart: "no"
    depends_on:
      - gitlab
    volumes:
      - ./scripts:/scripts:ro
      - gitlab_oauth_config:/shared
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - gitlabex-network
    command: >
      sh -c "
        apk add --no-cache curl docker-cli &&
        sh /scripts/init-gitlab-oauth.sh
      "

  # 后端服务
  backend:
    build: ./backend
    container_name: gitlabex-backend
    restart: unless-stopped
    expose:
      - "8080"
    depends_on:
      - postgres
      - redis
      - gitlab
      - onlyoffice
      - gitlab-init
    environment:
      # 数据库配置
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=gitlabex
      - DB_PASSWORD=password123
      - DB_NAME=gitlabex
      - DB_SSLMODE=disable
      # Redis配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=password123
      # GitLab配置
      - GITLAB_URL=http://localhost:8000/gitlab
      - GITLAB_INTERNAL_URL=http://gitlab
      - GITLAB_REDIRECT_URI=http://localhost:8000/api/auth/gitlab/callback
      - GITLAB_OAUTH_CONFIG_PATH=/shared/gitlab-oauth.env
      # OnlyOffice配置
      - ONLYOFFICE_URL=http://onlyoffice
      - ONLYOFFICE_JWT_SECRET=gitlabex-jwt-secret-2024
      - ONLYOFFICE_CALLBACK_URL=http://localhost:8000/api/documents/callback
      # JWT配置
      - JWT_SECRET=gitlabex-app-jwt-secret-2024
      # 服务器配置
      - SERVER_PORT=8080
      - GIN_MODE=release
    volumes:
      - gitlab_oauth_config:/shared:ro
    networks:
      - gitlabex-network

  # 前端服务
  frontend:
    build: ./frontend
    container_name: gitlabex-frontend
    restart: unless-stopped
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
    networks:
      - gitlabex-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: gitlabex-nginx
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend
      - gitlab
      - onlyoffice
    networks:
      - gitlabex-network

volumes:
  gitlab_config:
  gitlab_logs:
  gitlab_data:
  postgres_data:
  redis_data:
  onlyoffice_data:
  onlyoffice_logs:
  onlyoffice_cache:
  onlyoffice_forgotten:
  gitlab_oauth_config:

networks:
  gitlabex-network:
    driver: bridge