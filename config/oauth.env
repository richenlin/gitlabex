# GitLab OAuth 配置文件
# 该文件用于配置GitLab OAuth应用的相关参数
# 可以根据不同的部署环境进行调整

# GitLab 内部地址 (容器间通信使用)
GITLAB_INTERNAL_URL=http://gitlab

# GitLab 外部访问地址 (用户浏览器访问)
GITLAB_EXTERNAL_URL=http://127.0.0.1:8000/gitlab

# OAuth 回调地址 (GitLab重定向回来的地址)
GITLAB_OAUTH_REDIRECT_URI=http://127.0.0.1:8000/api/auth/gitlab/callback

# OAuth 应用名称
GITLAB_OAUTH_APP_NAME=GitLabEx Education Platform

# OAuth 权限范围
GITLAB_OAUTH_SCOPES=read_user read_repository write_repository

# 是否强制重新创建OAuth应用 (true/false)
FORCE_RECREATE_OAUTH_APP=true

# 说明：
# - GITLAB_INTERNAL_URL: 后端服务访问GitLab API时使用的地址
# - GITLAB_EXTERNAL_URL: 用户浏览器访问GitLab时使用的地址，用于构建OAuth授权URL
# - GITLAB_OAUTH_REDIRECT_URI: OAuth授权完成后GitLab重定向回来的地址
# 
# 不同部署场景的配置示例：
# 
# 1. 本地Docker开发环境 (当前配置):
#    GITLAB_INTERNAL_URL=http://gitlab
#    GITLAB_EXTERNAL_URL=http://127.0.0.1:8000/gitlab
#    GITLAB_OAUTH_REDIRECT_URI=http://127.0.0.1:8000/api/auth/gitlab/callback
#
# 2. 使用外部GitLab服务:
#    GITLAB_INTERNAL_URL=https://gitlab.example.com
#    GITLAB_EXTERNAL_URL=https://gitlab.example.com
#    GITLAB_OAUTH_REDIRECT_URI=https://your-app.example.com/api/auth/gitlab/callback
#
# 3. 生产环境:
#    GITLAB_INTERNAL_URL=http://gitlab.internal
#    GITLAB_EXTERNAL_URL=https://git.yourcompany.com
#    GITLAB_OAUTH_REDIRECT_URI=https://gitlabex.yourcompany.com/api/auth/gitlab/callback 